{
  "CrewAI Agent": {
    "prefix": "crew-agent",
    "body": [
      "${1:agent1} = Agent(",
      "  role='${2:Role1}',",
      "  goal='${3:Goal1}',",
      "  backstory='${4:Backstory1}',",
      "  cache=${5:True},",
      "  verbose=${6:False},",
      "  use_system_prompt=${7:True},",
      "  max_rpm=${8:30},",
      "  max_iter=${9:5}",
      ")"
    ],
    "description": "Create a CrewAI Agent"
  },
  "CrewAI Task": {
    "prefix": "crew-task",
    "body": [
      "${19:task1} = Task(",
      "  description='${20:Description1}',",
      "  agent=${1:agent1},",
      "  expected_output='${21:ExpectedOutput1}'",
      ")"
    ],
    "description": "Create a CrewAI Task"
  },
  "CrewAI Crew": {
    "prefix": "crew-crew",
    "body": [
      "crew = Crew(",
      "    agents=[${1:agents}],",
      "    tasks=[${2:tasks}],",
      "    verbose=2",
      ")"
    ],
    "description": "Create a CrewAI Crew"
  },
  "CrewAI Simple Tool": {
    "prefix": "crew-simple-tool",
    "body": [
      "from crewai.tools import tool",
      "",
      "@tool(\"${1:Tool Name}\")",
      "def ${2:my_simple_tool}(${3:question: str}) -> str:",
      "    \"\"\"${4:Tool description for clarity.}\"\"\"",
      "    # Tool logic here",
      "    return \"${5:Tool output}\""
    ],
    "description": "Create a simple CrewAI Tool"
  },
  "CrewAI Generic Process": {
    "prefix": "crew-generic-process",
    "body": [
      "from crewai import Crew, Process, Agent, Task, TaskOutput, CrewOutput",
      "",
      "# Define your agents",
      "${1:agent1} = Agent(",
      "  role='${2:Role1}',",
      "  goal='${3:Goal1}',",
      "  backstory='${4:Backstory1}',",
      "  cache=${5:True},",
      "  verbose=${6:False},",
      "  use_system_prompt=${7:True},",
      "  max_rpm=${8:30},",
      "  max_iter=${9:5}",
      ")",
      "${10:agent2} = Agent(",
      "  role='${11:Role2}',",
      "  goal='${12:Goal2}',",
      "  backstory='${13:Backstory2}',",
      "  cache=${14:True},",
      "  verbose=${15:False},",
      "  use_system_prompt=${16:True},",
      "  max_rpm=${17:30},",
      "  max_iter=${18:5}",
      ")",
      "",
      "# Define your tasks",
      "${19:task1} = Task(",
      "  description='${20:Description1}',",
      "  agent=${1:agent1},",
      "  expected_output='${21:ExpectedOutput1}'",
      ")",
      "${22:task2} = Task(",
      "  description='${23:Description2}',",
      "  agent=${10:agent2},",
      "  expected_output='${24:ExpectedOutput2}'",
      ")",
      "",
      "# Form the crew with a generic process",
      "generic_crew = Crew(",
      "  agents=[${1:agent1}, ${10:agent2}],",
      "  tasks=[${19:task1}, ${22:task2}],",
      "  process=Process.${25:process_type},",
      "  respect_context_window=${26:True},",
      "  memory=${27:True},",
      "  manager_agent=${28:None},",
      "  planning=${29:True}",
      ")",
      "",
      "# Execute the crew",
      "result = generic_crew.kickoff()",
      "",
      "# Accessing the type-safe output",
      "task_output: TaskOutput = result.tasks[0].output",
      "crew_output: CrewOutput = result.output"
    ],
    "description": "Create a generic CrewAI process"
  }
}